[terminal.shell]
program = "C:\\Windows\\System32\\cmd.exe"
# program = "C:\\Program Files\\Vim\\vim91\\vim.exe"
args = []

[general]
# import = [
#     "C:\\Users\\chr_58\\Allthemes\\themes\\gruvbox_darker.toml"
	
# ]
# $HOME/.config/alacritty/alacritty.toml
# by Rito Ghosh 2023-10-06
#@charan place the config in Appdata\Roaming\alacritty

# Alacritty now uses TOML formatting for its config files.
# This is a simple example.

# There are the specification here: https://github.com/alacritty/alacritty/blob/master/extra/man/alacritty.5.scd
# It is not obvious how it translates to TOML. But it is extremely straightforward.

# example: WINDOW, COLORS, etc. are tables, and should be represented as [window], [colors], respectively.
# specifics of variables go under them. e.g.- look under "dynamic_padding" under-
# https://github.com/alacritty/alacritty/blob/master/extra/man/alacritty.5.scd#window
# write `dynamic_padding = true` (without backticks -`) under the table [window]
# for variables with multiple values, use "dotted keys". Like setting `padding.x = 5` under [window].
# This is simple. If not clear, do several trials and errors.

# Below is my initial set-up. The TOML homepage (https://toml.io/en/v1.0.0) was very helpful in figuring this out. 
# I put the file alacritty.toml in $HOME/.config/alacritty. However it can be kept anywhere among the places mentioned in
# https://github.com/alacritty/alacritty/tree/master#configuration
    
working_directory = "C:\\Users\\chr_58"

[window]

opacity = 0.9

padding.x = 0
padding.y = 0

decorations = "Full"#"None"
decorations_theme_variant = "Dark" # "Light"

[font]

normal.family = "UbuntuMono Nerd Font Mono"
bold.family = "UbuntuMono Nerd Font Mono"
italic.family = "UbuntuMono Nerd Font Mono"
bold_italic.family = "UbuntuMono Nerd Font Mono"

size = 12.0

offset = { x = 0, y = 1 }	

[cursor]
style = "Block"
unfocused_hollow = false

# [[keyboard.bindings]]
# key = "F11"
# action = "ToggleFullscreen"

[keyboard]

bindings = [
	{key="F11",action="ToggleFullscreen"},
# { key = "Space", mods = "Control", chars = "\u0000"  }	
]

[terminal]

# Tip: for inspiration, look for values in the source code files of your favorite VS Code themes, and use the color picker in
# Google to test colors before setting a value, or simply using an editor such as VS Code where colors are displayed in a 
# small box when a HEX is detected by the editor.
